[{"/home/temisan/Desktop/broject/covid-19-tracker/src/index.js":"1","/home/temisan/Desktop/broject/covid-19-tracker/src/App.js":"2","/home/temisan/Desktop/broject/covid-19-tracker/src/Map.js":"3","/home/temisan/Desktop/broject/covid-19-tracker/src/LineGraph.js":"4","/home/temisan/Desktop/broject/covid-19-tracker/src/util.js":"5","/home/temisan/Desktop/broject/covid-19-tracker/src/InfoBox.jsx":"6","/home/temisan/Desktop/broject/covid-19-tracker/src/Table.jsx":"7"},{"size":174,"mtime":1632514815872,"results":"8","hashOfConfig":"9"},{"size":4883,"mtime":1632924247080,"results":"10","hashOfConfig":"9"},{"size":595,"mtime":1632848414043,"results":"11","hashOfConfig":"9"},{"size":2495,"mtime":1632911978133,"results":"12","hashOfConfig":"9"},{"size":1456,"mtime":1632904463131,"results":"13","hashOfConfig":"9"},{"size":977,"mtime":1632903347616,"results":"14","hashOfConfig":"9"},{"size":485,"mtime":1632899981358,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eqih05",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/temisan/Desktop/broject/covid-19-tracker/src/index.js",[],"/home/temisan/Desktop/broject/covid-19-tracker/src/App.js",["31"],"import React, {useState, useEffect} from 'react'; \nimport './App.css';\nimport { FormControl, MenuItem, Select, Card, CardContent} from '@mui/material';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport './Table.css';\nimport {prettyPrintStat, sortData} from \"./util\";\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData]= useState([]);\n  const [mapCenter, setMapCenter]= useState({lat: 34.80746, lng: -40.4796});\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(()=> {\n    fetch (\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then((data)=> {\n      setCountryInfo(data);\n    });\n  }, []);\n\n  //once APP loads the useEffect gets triggered once.\n  useEffect(()=> {\n    //async -> send request & wait for it\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data)=> {\n        //restructure json tree-> map essentially loops through the array and returns a modified array\n        const countries = data.map((country)=> ({\n          name: country.country, //United States, Nigeria\n          value: country.countryInfo.iso2, //UK, NG, FR\n        }));\n\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value; \n    const url = \n    countryCode === \"worldwide\" \n    ? \"https://disease.sh/v3/covid-19/all\"\n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then((response) => response.json())\n    .then((data)=> {\n      setCountry(countryCode); //update input field\n      setCountryInfo(data); //get all data\n      setMapCenter([data.countryInfo.lat, data.countryInfo.lng]);\n      setMapZoom(4);\n    });\n  };\n \n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            {/* {loop through all the countries and a show a drop down list of the options} */}\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n                <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                //map essentially loops through the array\n                countries.map((country)=> (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }            \n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n            <InfoBox \n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e)=> setCasesType('cases')}\n              title=\"Coronavirus Cases\" \n              total={prettyPrintStat(countryInfo.todayCases)} \n              cases={prettyPrintStat(countryInfo.cases)}/>\n\n            <InfoBox \n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType('recovered')}\n              title=\"Recovered\" \n              total={prettyPrintStat(countryInfo.todayRecovered)} \n              cases={prettyPrintStat(countryInfo.recovered)}/>\n\n            <InfoBox \n            isRed\n            active={casesType === \"deaths\"}\n            onClick={(e)=> setCasesType('deaths')}\n              title=\"Deaths\" \n              total={prettyPrintStat(countryInfo.todayDeaths)} \n              cases={prettyPrintStat(countryInfo.deaths)}/>\n          </div>\n        <Map \n        casesType={casesType}\n        zoom= {mapZoom}\n        center={mapCenter}\n        countries={mapCountries}\n        />\n    </div>\n    <Card className=\"app__right\">\n      <CardContent>\n        <h3>Live Cases by Country</h3>\n        <Table countries={tableData}/>\n        <h3 className=\"app__graphTitle \">Worldwide new {casesType}</h3>\n        <LineGraph className=\"app__graph\" casesType={casesType}/>\n        <div className=\"text-center m-3 py-2 border rounded-pill\">\n          <h3 className=\"text-dark\" style={{fontFamily:'Ephesis'}}>Created By Temisan. <a\n          class='social-icon-link-github'\n          href=\"https://www.facebook.com/temy.momodu\"\n          target='_blank'\n          rel=\"noopener\"\n          aria-label='Facebook'  \n        >\n          <i class='fab fa-facebook'/>\n        </a></h3>\n        </div>\n      </CardContent>\n    </Card> \n    </div>\n  );\n} \n\nexport default App;\n","/home/temisan/Desktop/broject/covid-19-tracker/src/Map.js",[],"/home/temisan/Desktop/broject/covid-19-tracker/src/LineGraph.js",[],"/home/temisan/Desktop/broject/covid-19-tracker/src/util.js",[],"/home/temisan/Desktop/broject/covid-19-tracker/src/InfoBox.jsx",[],"/home/temisan/Desktop/broject/covid-19-tracker/src/Table.jsx",[],{"ruleId":"32","severity":1,"message":"33","line":125,"column":88,"nodeType":"34","messageId":"35","endLine":131,"endColumn":10,"fix":"36"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"37","text":"38"},[4682,4692],"\"noopener noreferrer\""]