{"ast":null,"code":"import _regeneratorRuntime from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/temisan/Desktop/broject/covid-19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { FormControl, MenuItem, Select, Card, CardContent } from '@mui/material';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport './Table.css';\nimport { prettyPrintStat, sortData } from \"./util\";\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  var _useState3 = useState(\"worldwide\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      countryInfo = _useState6[0],\n      setCountryInfo = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tableData = _useState8[0],\n      setTableData = _useState8[1];\n\n  var _useState9 = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mapCenter = _useState10[0],\n      setMapCenter = _useState10[1];\n\n  var _useState11 = useState(3),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mapZoom = _useState12[0],\n      setMapZoom = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mapCountries = _useState14[0],\n      setMapCountries = _useState14[1];\n\n  var _useState15 = useState(\"cases\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      casesType = _useState16[0],\n      setCasesType = _useState16[1];\n\n  useEffect(function () {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCountryInfo(data);\n    });\n  }, []); //once APP loads the useEffect gets triggered once.\n\n  useEffect(function () {\n    //async -> send request & wait for it\n    var getCountriesData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  //restructure json tree-> map essentially loops through the array and returns a modified array\n                  var countries = data.map(function (country) {\n                    return {\n                      name: country.country,\n                      //United States, Nigeria\n                      value: country.countryInfo.iso2 //UK, NG, FR\n\n                    };\n                  });\n                  var sortedData = sortData(data);\n                  setTableData(sortedData);\n                  setMapCountries(data);\n                  setCountries(countries);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getCountriesData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCountriesData();\n  }, []);\n\n  var onCountryChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var countryCode, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              countryCode = e.target.value;\n              url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : \"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);\n              _context2.next = 4;\n              return fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                setCountry(countryCode); //update input field\n\n                //update input field\n                setCountryInfo(data); //get all data\n\n                //get all data\n                setMapCenter([data.countryInfo.lat, data.countryInfo.lng]);\n                setMapZoom(4);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onCountryChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), //map essentially loops through the array\n            countries.map(function (country) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.value,\n                children: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"cases\",\n          onClick: function onClick(e) {\n            return setCasesType('cases');\n          },\n          title: \"Coronavirus Cases\",\n          total: prettyPrintStat(countryInfo.todayCases),\n          cases: prettyPrintStat(countryInfo.cases)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"recovered\",\n          onClick: function onClick(e) {\n            return setCasesType('recovered');\n          },\n          title: \"Recovered\",\n          total: prettyPrintStat(countryInfo.todayRecovered),\n          cases: prettyPrintStat(countryInfo.recovered)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"deaths\",\n          onClick: function onClick(e) {\n            return setCasesType('deaths');\n          },\n          title: \"Deaths\",\n          total: prettyPrintStat(countryInfo.todayDeaths),\n          cases: prettyPrintStat(countryInfo.deaths)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        casesType: casesType,\n        zoom: mapZoom,\n        center: mapCenter,\n        countries: mapCountries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"app__graphTitle \",\n          children: [\"Worldwide new \", casesType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          className: \"app__graph\",\n          casesType: casesType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center m-3 py-2 border rounded-pill\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-dark\",\n            style: {\n              fontFamily: 'Ephesis'\n            },\n            children: [\"Created By Temisan. \", /*#__PURE__*/_jsxDEV(\"a\", {\n              class: \"social-icon-link-github\",\n              href: \"https://www.facebook.com/temy.momodu\",\n              target: \"_blank\",\n              rel: \"noopener\",\n              \"aria-label\": \"Facebook\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fab fa-facebook\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"b3JHsg2O7PPHCdQgSs0d7iXP4r0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/temisan/Desktop/broject/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","FormControl","MenuItem","Select","Card","CardContent","InfoBox","Map","Table","prettyPrintStat","sortData","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","e","countryCode","target","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths","fontFamily"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'; \nimport './App.css';\nimport { FormControl, MenuItem, Select, Card, CardContent} from '@mui/material';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport './Table.css';\nimport {prettyPrintStat, sortData} from \"./util\";\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData]= useState([]);\n  const [mapCenter, setMapCenter]= useState({lat: 34.80746, lng: -40.4796});\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(()=> {\n    fetch (\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then((data)=> {\n      setCountryInfo(data);\n    });\n  }, []);\n\n  //once APP loads the useEffect gets triggered once.\n  useEffect(()=> {\n    //async -> send request & wait for it\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data)=> {\n        //restructure json tree-> map essentially loops through the array and returns a modified array\n        const countries = data.map((country)=> ({\n          name: country.country, //United States, Nigeria\n          value: country.countryInfo.iso2, //UK, NG, FR\n        }));\n\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value; \n    const url = \n    countryCode === \"worldwide\" \n    ? \"https://disease.sh/v3/covid-19/all\"\n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then((response) => response.json())\n    .then((data)=> {\n      setCountry(countryCode); //update input field\n      setCountryInfo(data); //get all data\n      setMapCenter([data.countryInfo.lat, data.countryInfo.lng]);\n      setMapZoom(4);\n    });\n  };\n \n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            {/* {loop through all the countries and a show a drop down list of the options} */}\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n                <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                //map essentially loops through the array\n                countries.map((country)=> (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }            \n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n            <InfoBox \n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e)=> setCasesType('cases')}\n              title=\"Coronavirus Cases\" \n              total={prettyPrintStat(countryInfo.todayCases)} \n              cases={prettyPrintStat(countryInfo.cases)}/>\n\n            <InfoBox \n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType('recovered')}\n              title=\"Recovered\" \n              total={prettyPrintStat(countryInfo.todayRecovered)} \n              cases={prettyPrintStat(countryInfo.recovered)}/>\n\n            <InfoBox \n            isRed\n            active={casesType === \"deaths\"}\n            onClick={(e)=> setCasesType('deaths')}\n              title=\"Deaths\" \n              total={prettyPrintStat(countryInfo.todayDeaths)} \n              cases={prettyPrintStat(countryInfo.deaths)}/>\n          </div>\n        <Map \n        casesType={casesType}\n        zoom= {mapZoom}\n        center={mapCenter}\n        countries={mapCountries}\n        />\n    </div>\n    <Card className=\"app__right\">\n      <CardContent>\n        <h3>Live Cases by Country</h3>\n        <Table countries={tableData}/>\n        <h3 className=\"app__graphTitle \">Worldwide new {casesType}</h3>\n        <LineGraph className=\"app__graph\" casesType={casesType}/>\n        <div className=\"text-center m-3 py-2 border rounded-pill\">\n          <h3 className=\"text-dark\" style={{fontFamily:'Ephesis'}}>Created By Temisan. <a\n          class='social-icon-link-github'\n          href=\"https://www.facebook.com/temy.momodu\"\n          target='_blank'\n          rel=\"noopener\"\n          aria-label='Facebook'  \n        >\n          <i class='fab fa-facebook'/>\n        </a></h3>\n        </div>\n      </CardContent>\n    </Card> \n    </div>\n  );\n} \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}