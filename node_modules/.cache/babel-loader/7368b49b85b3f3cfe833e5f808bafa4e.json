{"ast":null,"code":"import _toConsumableArray from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/temisan/Desktop/broject/covid-19-tracker/src/util.js\",\n    _this = this;\n\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 200\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 400\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 800\n  }\n};\nexport var sortData = function sortData(data) {\n  var sortedData = _toConsumableArray(data);\n\n  return sortedData.sort(function (a, b) {\n    return a.cases > b.cases ? -1 : 1;\n  });\n}; //cases formatter\n\nexport var prettyPrintStat = function prettyPrintStat(stat) {\n  return stat ? \"+\".concat(numeral(stat).format(\"0.0a\")) : \"+0\";\n}; //draw circles on the map with interactive tooltip\n\nexport var showDataOnMap = function showDataOnMap(data) {\n  var casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  return data.map(function (country) {\n    return /*#__PURE__*/_jsxDEV(Circle, {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      fillOpacity: 0.4,\n      color: casesTypeColors[casesType].hex,\n      radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-flag\",\n            style: {\n              backgroundImage: \"url(\".concat(country.countryInfo.flag, \")\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-name\",\n            children: country.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-confirmed\",\n            children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-recovered\",\n            children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-death\",\n            children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, _this);\n  });\n};","map":{"version":3,"sources":["/home/temisan/Desktop/broject/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 200,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 400,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 800,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n\n  return sortedData.sort((a, b)=> (a.cases > b.cases ? -1: 1));\n};\n\n//cases formatter\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n//draw circles on the map with interactive tooltip\nexport const showDataOnMap = (data, casesType =\"cases\") => \n data.map((country) => (\n  <Circle \n  center={[country.countryInfo.lat, country.countryInfo.long]}\n  fillOpacity={0.4}\n  color={casesTypeColors[casesType].hex}\n  radius={\n    Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n  }>\n\n  <Popup>\n    <div className=\"info-container\">\n      <div\n        className=\"info-flag\"\n        style={{backgroundImage: `url(${country.countryInfo.flag})`}}\n      />\n      <div className=\"info-name\">{country.country}</div>\n      <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n      <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n      <div className=\"info-death\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n    </div>\n  </Popup>\n  </Circle>\n));"]},"metadata":{},"sourceType":"module"}