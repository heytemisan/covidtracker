{"ast":null,"code":"import _regeneratorRuntime from\"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"casesType\"];import React,{useEffect,useState}from'react';import{Line}from\"react-chartjs-2\";import numeral from\"numeral\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var options={legend:{display:false},elements:{point:{radius:0}},maintainAspectRatio:false,tooltips:{mode:\"index\",intersect:false,callbacks:{label:function label(tooltipItem,data){return numeral(tooltipItem.value).format(\"+0,0\");}}},scales:{xAxes:[{type:\"time\",time:{format:\"MM/DD/YY\",tooltipFormat:\"ll\"}}],yAxes:[{gridLines:{display:false},ticks:{// Include a dollar sign in the ticks\ncallback:function callback(value,index,values){return numeral(value).format(\"0a\");}}}]}};var buildChartData=function buildChartData(data,casesType){var chartData=[];var lastDataPoint;for(var date in data.cases){if(lastDataPoint){var newDataPoint={x:date,y:data[casesType][date]-lastDataPoint};chartData.push(newDataPoint);}lastDataPoint=data[casesType][date];}return chartData;};function LineGraph(_ref){var _ref$casesType=_ref.casesType,casesType=_ref$casesType===void 0?\"cases\":_ref$casesType,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\").then(function(response){return response.json();}).then(function(data){var chartData=buildChartData(data,\"cases\");setData(chartData);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[casesType]);return/*#__PURE__*/_jsxs(\"div\",{className:props.className,children:[(data===null||data===void 0?void 0:data.length)>0&&/*#__PURE__*/_jsx(Line,{data:{datasets:[{backgroundColor:\"rgba(204, 16, 52, 0.5)\",borderColor:\"#CC1034\",data:data}]},options:options}),/*#__PURE__*/_jsx(\"div\",{})]});}export default LineGraph;","map":{"version":3,"sources":["/home/temisan/Desktop/broject/covid-19-tracker/src/LineGraph.js"],"names":["React","useEffect","useState","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","props","setData","fetchData","fetch","then","response","json","className","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":[" import React, {useEffect, useState} from 'react';\nimport {Line} from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n  };\n\nconst buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases){\n        if (lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date]-lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\n\nfunction LineGraph({casesType = \"cases\", ...props}) {\n    const [data,setData]= useState({});\n\n    useEffect(()=> {\n        const fetchData = async()=> {\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((data)=> {\n                let chartData = buildChartData(data, \"cases\");\n                setData(chartData);\n            });\n        };\n        fetchData();\n    }, [casesType]) ;\n\n   \n    return (\n        <div className={props.className}>\n            {data?.length > 0 && (\n                <Line \n                data = {{\n                        datasets: [{\n                            backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                            borderColor: \"#CC1034\",\n                            data: data,\n                                    },],\n                }}\n                options= {options}\n                />\n            )}\n          <div>\n          </div>\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}