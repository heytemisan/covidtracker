{"ast":null,"code":"import _regeneratorRuntime from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"casesType\"];\n\nvar _jsxFileName = \"/home/temisan/Desktop/broject/covid-19-tracker/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function callback(value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nvar buildChartData = function buildChartData(data, casesType) {\n  var chartData = [];\n  var lastDataPoint;\n\n  for (var date in data.cases) {\n    if (lastDataPoint) {\n      var newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n\n    lastDataPoint = data[casesType][date];\n  }\n\n  return chartData;\n};\n\nfunction LineGraph(_ref) {\n  _s();\n\n  var _ref$casesType = _ref.casesType,\n      casesType = _ref$casesType === void 0 ? \"cases\" : _ref$casesType,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\").then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  var chartData = buildChartData(data, \"cases\");\n                  setData(chartData);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [(data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"wpgUsBY956btMcg33+x8PhIaewY=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/home/temisan/Desktop/broject/covid-19-tracker/src/LineGraph.js"],"names":["React","useEffect","useState","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","props","setData","fetchData","fetch","then","response","json","className","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":[" import React, {useEffect, useState} from 'react';\nimport {Line} from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n  };\n\nconst buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases){\n        if (lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date]-lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\n\nfunction LineGraph({casesType = \"cases\", ...props}) {\n    const [data,setData]= useState({});\n\n    useEffect(()=> {\n        const fetchData = async()=> {\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((data)=> {\n                let chartData = buildChartData(data, \"cases\");\n                setData(chartData);\n            });\n        };\n        fetchData();\n    }, [casesType]) ;\n\n   \n    return (\n        <div className={props.className}>\n            {data?.length > 0 && (\n                <Line \n                data = {{\n                        datasets: [{\n                            backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                            borderColor: \"#CC1034\",\n                            data: data,\n                                    },],\n                }}\n                options= {options}\n                />\n            )}\n          <div>\n          </div>\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}