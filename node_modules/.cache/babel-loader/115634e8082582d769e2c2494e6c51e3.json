{"ast":null,"code":"import _toConsumableArray from\"/home/temisan/Desktop/broject/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import numeral from\"numeral\";import{Circle,Popup}from\"react-leaflet\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var casesTypeColors={cases:{hex:\"#CC1034\",multiplier:200},recovered:{hex:\"#7dd71d\",multiplier:400},deaths:{hex:\"#fb4443\",multiplier:800}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);return sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});};//cases formatter\nexport var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};//draw circles on the map with interactive tooltip\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cases\";return data.map(function(country){return/*#__PURE__*/_jsx(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,color:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"info-name\",children:country.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-confirmed\",children:[\"Cases: \",numeral(country.cases).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-recovered\",children:[\"Recovered: \",numeral(country.recovered).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-death\",children:[\"Deaths: \",numeral(country.deaths).format(\"0,0\")]})]})})});});};","map":{"version":3,"sources":["/home/temisan/Desktop/broject/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,CACtBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,UAAU,CAAE,GAFP,CADe,CAKtBC,SAAS,CAAE,CACTF,GAAG,CAAE,SADI,CAETC,UAAU,CAAE,GAFH,CALW,CAStBE,MAAM,CAAE,CACNH,GAAG,CAAE,SADC,CAENC,UAAU,CAAE,GAFN,CATc,CAAxB,CAeA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAChC,GAAIC,CAAAA,UAAU,oBAAOD,IAAP,CAAd,CAEA,MAAOC,CAAAA,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACT,KAAF,CAAUU,CAAC,CAACV,KAAZ,CAAoB,CAAC,CAArB,CAAwB,CAAlC,EAAhB,CAAP,CACD,CAJM,CAMP;AACA,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAAUA,CAAAA,IAAI,YAAOhB,OAAO,CAACgB,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,EAAwC,IAAtD,EAAxB,CAEP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,IAAD,KAAOS,CAAAA,SAAP,2DAAkB,OAAlB,OAC5BT,CAAAA,IAAI,CAACU,GAAL,CAAS,SAACC,OAAD,qBACR,KAAC,MAAD,EACA,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADR,CAEA,WAAW,CAAE,GAFb,CAGA,KAAK,CAAErB,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAHlC,CAIA,MAAM,CACJoB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgChB,eAAe,CAACgB,SAAD,CAAf,CAA2Bb,UAL7D,uBAQA,KAAC,KAAD,wBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,YACE,SAAS,CAAC,WADZ,CAEE,KAAK,CAAE,CAACqB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAhB,CAFT,EADF,cAKE,YAAK,SAAS,CAAC,WAAf,UAA4BP,OAAO,CAACA,OAApC,EALF,cAME,aAAK,SAAS,CAAC,gBAAf,qBAAwCrB,OAAO,CAACqB,OAAO,CAACjB,KAAT,CAAP,CAAuBa,MAAvB,CAA8B,KAA9B,CAAxC,GANF,cAOE,aAAK,SAAS,CAAC,gBAAf,yBAA4CjB,OAAO,CAACqB,OAAO,CAACd,SAAT,CAAP,CAA2BU,MAA3B,CAAkC,KAAlC,CAA5C,GAPF,cAQE,aAAK,SAAS,CAAC,YAAf,sBAAqCjB,OAAO,CAACqB,OAAO,CAACb,MAAT,CAAP,CAAwBS,MAAxB,CAA+B,KAA/B,CAArC,GARF,GADF,EARA,EADQ,EAAT,CAD4B,EAAtB","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 200,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 400,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 800,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n\n  return sortedData.sort((a, b)=> (a.cases > b.cases ? -1: 1));\n};\n\n//cases formatter\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n//draw circles on the map with interactive tooltip\nexport const showDataOnMap = (data, casesType =\"cases\") => \n data.map((country) => (\n  <Circle \n  center={[country.countryInfo.lat, country.countryInfo.long]}\n  fillOpacity={0.4}\n  color={casesTypeColors[casesType].hex}\n  radius={\n    Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n  }>\n\n  <Popup>\n    <div className=\"info-container\">\n      <div\n        className=\"info-flag\"\n        style={{backgroundImage: `url(${country.countryInfo.flag})`}}\n      />\n      <div className=\"info-name\">{country.country}</div>\n      <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n      <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n      <div className=\"info-death\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n    </div>\n  </Popup>\n  </Circle>\n));"]},"metadata":{},"sourceType":"module"}